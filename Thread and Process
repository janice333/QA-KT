refer to: 
https://www.cnblogs.com/bsjl/p/7693029.html

1、进程和线程的区别：
   线程是进程内的一个执行单元，也是进程的可调度实体。
   一个程序至少有一个进程，一个进程至少有一个线程。
   根本区别：进程是操作系统资源分配的基本单位，而线程是任务调度和执行的基本单位。
  （1）地址空间：线程是进程的一个执行单元，进程至少有一个线程，各线程共享进程的地址空间，而进程有自己独立的地址空间。
  （2）资源拥有：进程是操作系统资源分配的基本单位，同一进程内的线程共享进程的资源。
  （3）开销方面：每个进程都有独立的代码和数据空间，程序之间的切换会有较大的开销；线程可以看作是轻量级的进程，同类进程共享代码和数据空间，每个线程都有 自己独立的运行栈和程序计数器，线程之间的切换开销小。
  （4）二者均可并发执行。

2、多线程的优势
 （1）提高程序的运行性能
 （2）充分利用系统的处理能力，提高系统的资源利用率
 （3）提高系统响应性，即线程可以在运行现有任务的情况下立即开始处理新的任务

3、多线程通信
  多线程之间需要进行通信，线程的通信依赖共享的内存和线程方法的调用来实现。Java内存模型分为主内存和工作内存，通过内存之间的数据交换实现线程之间的通信；主动调用线程的wait()、notify()方法（等待唤醒机制）也可以实现线程之间的通信。

4、多线程并发为什么不安全？如何解决？
  线程安全的定义：多个线程访问同一个对象时，如果不用考虑这些线程在运行时环境下的调度和交替执行，也不需要进行额外的同步，或者在调用方进行任何其他操作，调用这个对象的行为都可以获得正确的结果，那么这个对象就是线程安全的。
  竞态条件：多线程同时对数据进行改变，读取到脏数据或写入错数据
  重排序、有序性、可见性：线程之间不可见

5、如何按照指定顺序执行多个线程？
  有三个线程T1，T2，T3，确保它们被顺序执行。在多线程中有多种方法让线程按特定顺序执行，你可以用线程类的join()方法在一个线程中启动另一个线程，另外一个线程完成该线程继续执行。为了确保三个线程的顺序你应该先启动最后一个(T3调用T2，T2调用T1)，这样T1就会先完成而T3最后完成。
  
6、如何查看锁状态？

7、等待的线程是以什么机制查看锁状态？
  循环机制
  
8、为什么你应该在循环中检查等待条件?
  处于等待状态的线程可能会收到错误警报和伪唤醒，如果不在循环中检查等待条件，程序就会在没有满足结束条件的情况下退出。因此，当一个等待线程醒来时，不能认为它原来的等待状态仍然是有效的，在notify()方法调用之后和等待线程醒来之前这段时间它可能会改变。这就是在循环中使用wait()方法效果更好的原因。

9、线程的生命周期
  新建、就绪、运行、等待/阻塞/睡眠、终止
  
10、进程有几种状态？
  就绪状态、执行状态、阻塞状态
